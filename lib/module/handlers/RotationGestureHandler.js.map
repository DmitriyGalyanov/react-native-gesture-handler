{"version":3,"sources":["RotationGestureHandler.ts"],"names":["createHandler","baseGestureHandlerProps","rotationGestureHandlerProps","rotationHandlerName","RotationGestureHandler","name","allowedProps","config"],"mappings":"AACA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,SAEEC,uBAFF,QAGO,wBAHP;AAKA,OAAO,MAAMC,2BAA2B,GAAG,CACzC,kCADyC,CAApC;AAmBP,OAAO,MAAMC,mBAAmB,GAAG,wBAA5B;AAGP;AACA,OAAO,MAAMC,sBAAsB,GAAGJ,aAAa,CAGjD;AACAK,EAAAA,IAAI,EAAEF,mBADN;AAEAG,EAAAA,YAAY,EAAEL,uBAFd;AAGAM,EAAAA,MAAM,EAAE;AAHR,CAHiD,CAA5C","sourcesContent":["import { RotationGestureHandlerEventPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const rotationGestureHandlerProps = [\n  'secondPointerLiftFinishesGesture',\n] as const;\n\nexport interface RotationGestureConfig {\n  /**\n   * @Platform Android\n   *\n   * When `false`, the Handler will not finish when second Pointer Lifts,\n   * allowing Gesture to continue when a new second Pointer arrives\n   * (on iOS it's the default Behaviour)\n   */\n  secondPointerLiftFinishesGesture?: boolean;\n}\n\nexport interface RotationGestureHandlerProps\n  extends BaseGestureHandlerProps<RotationGestureHandlerEventPayload>,\n    RotationGestureConfig {}\n\nexport const rotationHandlerName = 'RotationGestureHandler';\n\nexport type RotationGestureHandler = typeof RotationGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const RotationGestureHandler = createHandler<\n  RotationGestureHandlerProps,\n  RotationGestureHandlerEventPayload\n>({\n  name: rotationHandlerName,\n  allowedProps: baseGestureHandlerProps,\n  config: {},\n});\n"]}